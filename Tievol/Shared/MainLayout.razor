@layout TelerikLayout
@inherits LayoutComponentBase


<TelerikRootComponent>
    <div class="pl-4 navbar" style="
        background-color: #dbdbdb;">
        <TelerikButton Icon="@IconName.Menu" OnClick="ToggleNavMenu" />
        <a class="navbar-brand" href="">IT Consultores Spa</a>
    </div>

    <TelerikDrawer Expanded="@Expanded"
                   Class="NavMenuCssClass"
                   @bind-SelectedItem="@selectedItem"
                   Data="@Data"
                   @ref="@DrawerOptions"
                   UrlField="Url" TextField="Text" IconField="Icon"
                   MiniMode="true"
                   Mode="@DrawerMode.Push">
        <Content>
            <div class="text-info pl-4">
                @Body
            </div>
        </Content>
    </TelerikDrawer>
</TelerikRootComponent>

@code {

    public TelerikDrawer<DrawerItem> DrawerOptions { get; set; }

    public DrawerItem selectedItem { get; set; }

    public bool Expanded { get; set; } = true;

    public IEnumerable<DrawerItem> Data { get; set; } =
        new List<DrawerItem>
        {
            //new DrawerItem { Text = "Rubros",  Icon = IconName.Dollar,  Url = "Referencias/Rubros"},
            //new DrawerItem { Text = "Sub_rubros",  Icon = IconName.Dollar,  Url = "Referencias/Sub_rubros"},
            //new DrawerItem { Text = "Bodegas",  Icon = IconName.Inbox,  Url = "Referencias/Bodegas"},
            new DrawerItem { Text = "Ciudades",  Icon="home",  Url = "Referencias/Ciudades"},
            //new DrawerItem { Text = "Comunas",   Icon = IconName.Globe,            Url = "Referencias/Comunas" },
            new DrawerItem { Text = "Estados",  Icon = "check-outline",  Url = "Referencias/Estados"},
            new DrawerItem { Text = "Proveedores",  Icon = IconName.TellAFriend,  Url = "Referencias/ClienteProveedor"},
            //new DrawerItem { Text = "Familias",  Icon = IconName.ModuleManager,  Url = "Referencias/Familias"},
            new DrawerItem { Text = "Marcas",  Icon = "barcode-outline",  Url = "Referencias/Marca"},
            new DrawerItem { Text = "Productos",  Icon = "cart",  Url = "Referencias/Producto"},
            //new DrawerItem { Text = "Perfiles",  Icon = IconName.User,  Url = "Referencias/Perfiles"},
            new DrawerItem { Text = "Regiones",  Icon = IconName.MarkerPinTarget,  Url = "Referencias/Regiones"},
            //new DrawerItem { Text = "Sub_Familias",  Icon = IconName.MarkerPinTarget,  Url = "Referencias/Subfamilia"},
            new DrawerItem { Text = "Sucursales",  Icon = IconName.Pin,  Url = "Referencias/Sucursales"},
            new DrawerItem { Text = "Tipos de Documentos",  Icon = IconName.File,  Url = "Referencias/Tipo_documentos"},
            new DrawerItem { Text = "Tipos de Proveedores",  Icon = IconName.Share,  Url = "Referencias/Tipo_ClienteProveedor"},
            new DrawerItem { Text = "Tipos de Descuento",  Icon = IconName.Percent,  Url = "Referencias/Tipo_descuentos"},
            //new DrawerItem { Text = "Tipos de Empresas",  Icon = IconName.MarkerPinTarget,  Url = "Referencias/Tipo_Empresa"},
            new DrawerItem { Text = "Tipos de Inventario",  Icon = IconName.DeliciousBox,  Url = "Referencias/Tipo_Inventario"},
            //new DrawerItem { Text = "Tipos de Materiales",  Icon = IconName.MarkerPinTarget,  Url = "Referencias/Tipo_Material"},
            new DrawerItem { Text = "Tipos de Pago",  Icon = IconName.Dollar,  Url = "Referencias/Tipo_Pago"},
            //new DrawerItem { Text = "Tipos de Productos",  Icon = IconName.Cart,  Url = "Referencias/Tipo_Productos"},
           new DrawerItem { Text = "Toma de Inventarios",  Icon = "track-changes-enable",  Url = "Referencias/Toma_Inventario"},
            //new DrawerItem { Text = "Tipos de Productos",  Icon = IconName.Cart,  Url = "Referencias/Toma_Inventario"},
            new DrawerItem { Text = "Ubicaciones",  Icon = IconName.Globe,  Url = "Referencias/Ubicaciones"},
                //new DrawerItem { Text = "Unidades",  Icon = IconName.Percent,  Url = "Referencias/Unidades"},
            };

    public class DrawerItem
    {
        public string Text { get; set; }
        public string Icon { get; set; }
        public string Url { get; set; }
        public bool IsSeparator { get; set; }
    }

    private void ToggleNavMenu()
    {
        Expanded = !Expanded;
    }

    private string NavMenuCssClass => Expanded ? "collapse" : null;

}


